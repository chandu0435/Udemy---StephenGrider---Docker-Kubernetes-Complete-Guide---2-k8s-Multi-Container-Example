# @note: this docker-compose file is used for development only
# for production, .travis.yml creates and stores the images
# and Dockerrun.aws.json glues them on AWS
version: '3'
services:
  # ****************************************************
  # ******************* postgres ***********************
  # ****************************************************
  # host name (to be accessed by other containers): postgres
  # http://postgres
  postgres:
    image: 'postgres:latest'
  # ****************************************************
  # ******************** redis *************************
  # ****************************************************
  # host name (to be accessed by other containers): redis
  # http://redis
  redis:
    image: 'redis:latest'
  # ****************************************************
  # ******************** nginx *************************
  # ****************************************************
  # host name (to be accessed by other containers): nginx
  # http://nginx
  nginx:
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./nginx
    ports:
      # 80 on nginx will be routed to 3050 locally
      - '3050:80'
    depends_on:
      - api
      - client
  # ****************************************************
  # ********************* api **************************
  # ****************************************************
  # host name (to be accessed by other containers): api
  # http://api
  api:
    build:
      dockerfile: Dockerfile
      context: ./api
    volumes:
      # do not touch the app/node_modules folder
      - /app/node_modules
      # share the other (non node_modules) folders inside
      # the api directory with the app directory
      # in the container
      - ./api:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379 
      - PGUSER=postgres               # default postgres user is postgres
      - PGHOST=postgres               # name of the postgres service (the docker-compose service above)
      - PGDATABASE=postgres           # default postgres database is postgres
      - PGPASSWORD=postgres_password  # default postgres password is postgres_password
      - PGPORT=5432                   # default postgres port
    # don't set up until postgres and redis are set up
    depends_on:
      - postgres
      - redis
  # ****************************************************
  # ******************** client ************************
  # ****************************************************
  # host name (accessed by other containers with): client
  # http://client
  client:
    build:
      dockerfile: Dockerfile
      context: ./client
    volumes:
      - /app/node_modules
      - ./client:/app
    # don't set up until postgres and redis are set up
    depends_on:
      - postgres
      - redis
  # ****************************************************
  # ******************** worker ************************
  # ****************************************************
  # host name (to be accessed by other containers): worker
  # http://worker
  worker:
    build:
      dockerfile: Dockerfile
      context: ./worker
    volumes:
      - /app/node_modules
      - ./worker:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379 
    # don't set up until postgres and redis are set up
    depends_on:
      - postgres
      - redis