sudo: required
services:
  - docker

before_install:
  # only install the client since it's the only one we're interested in testing
  - docker build -t nick3141/docker-kubernetes-complete-guide-example-0-react-test -f ./client/Dockerfile.dev ./client
  # to test additional servers we'd have to specify them here
  # (and test them in the script section)


script:
  # -- --coverage to make sure the tests do not wait for input (CLI) after completion
  - docker run nick3141/docker-kubernetes-complete-guide-example-0-react-test npm test -- --coverage

after_success:
  # build images with the production docker files after tests run successfully
  # -t tags the builds so we can reference them again
  - docker build -t nick3141/docker-kubernetes-complete-guide-example-0-client ./client
  - docker build -t nick3141/docker-kubernetes-complete-guide-example-0-nginx ./nginx
  - docker build -t nick3141/docker-kubernetes-complete-guide-example-0-api ./api
  - docker build -t nick3141/docker-kubernetes-complete-guide-example-0-worker ./worker
  # log in to docker CLI
  # username and password are stored on the travis project as encrypted variables
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
  # push new images to docker hub
  - docker push nick3141/docker-kubernetes-complete-guide-example-0-client
  - docker push nick3141/docker-kubernetes-complete-guide-example-0-nginx
  - docker push nick3141/docker-kubernetes-complete-guide-example-0-api
  - docker push nick3141/docker-kubernetes-complete-guide-example-0-worker

deploy:
  provider: elasticbeanstalk
  region: ap-southeast-2
  app: multi-docker
  env: MultiDocker-env
  bucket_name: elasticbeanstalk-ap-southeast-2-875276383652
  bucket_path: docker-multi-path
  on:
    branch: master
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key:
    secure: $AWS_SECRET_KEY